services:
  bot:
    build:
      context: .
      dockerfile: Dockerfile.bot
    environment:
      - BOT_TOKEN=${BOT_TOKEN}
      - LOG_LEVEL=${LOG_LEVEL}
      - ADMIN_TELEGRAM_ID=${ADMIN_TELEGRAM_ID}
      - BOT_LINK=${BOT_LINK}
      - INVITE_LINK=${INVITE_LINK}
      - GROUP_ID=${GROUP_ID}
      - FOR_LOGS=${FOR_LOGS}
      - ADMIN_LOGIN=${ADMIN_LOGIN}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - API_BASE_URL=http://web:8000  # Добавлено для связи с API
    volumes:
      - ./data:/app/data
      - ./utils:/app/utils
      - ./models:/app/models
      - ./bot:/app/bot
      - ./avatars:/app/avatars
      - ./ticket_photos:/app/ticket_photos
    restart: unless-stopped
    depends_on:
      web:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "test", "-f", "/data/bot_initialized"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 10s
    networks:
      - coworking_network

  web:
    build:
      context: .
      dockerfile: Dockerfile.web
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - SECRET_KEY_JWT=${SECRET_KEY_JWT}
      - ADMIN_LOGIN=${ADMIN_LOGIN}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - LOG_LEVEL=${LOG_LEVEL}
      - BOT_TOKEN=${BOT_TOKEN}
      - ADMIN_TELEGRAM_ID=${ADMIN_TELEGRAM_ID}
      - YOKASSA_ACCOUNT_ID=${YOKASSA_ACCOUNT_ID}
      - YOKASSA_SECRET_KEY=${YOKASSA_SECRET_KEY}
      - RUBITIME_API_KEY=${RUBITIME_API_KEY}
      - RUBITIME_BRANCH_ID=${RUBITIME_BRANCH_ID:-12595}
      - RUBITIME_COOPERATOR_ID=${RUBITIME_COOPERATOR_ID:-25786}
      - FILE_RETENTION_DAYS=${FILE_RETENTION_DAYS:-30}  # Срок хранения файлов в днях
      - MAX_FILE_SIZE_MB=${MAX_FILE_SIZE_MB:-10}        # Максимальный размер файла в МБ
      - DB_TIMEOUT=20                    # Таймаут операций БД в секундах
      - DB_RETRY_ATTEMPTS=3              # Количество повторных попыток
      - DB_RETRY_DELAY=0.1              # Задержка между попытками
    ports:
      - "8000:8000"
    volumes:
      - ./data:/app/data
      - ./utils:/app/utils
      - ./models:/app/models
      - ./frontend/static:/app/frontend/static
      - ./avatars:/app/avatars
      - ./ticket_photos:/app/ticket_photos
    working_dir: /app
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000 || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    networks:
      - coworking_network

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "80:80"
    restart: unless-stopped
    depends_on:
      web:
        condition: service_healthy
    networks:
      - coworking_network

networks:
  coworking_network:
    driver: bridge