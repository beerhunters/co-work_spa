import React, { useState, useEffect } from 'react';
import {
  Modal,
  ModalOverlay,
  ModalContent,
  ModalHeader,
  ModalBody,
  ModalFooter,
  Button,
  Text,
  VStack,
  HStack,
  Icon,
  useColorModeValue,
  Alert,
  AlertIcon,
  Box,
  Badge,
  Code
} from '@chakra-ui/react';
import { FiBell, FiVolume2, FiCheck, FiX } from 'react-icons/fi';
import notificationManager from '../utils/notifications';

const NotificationPermissionModal = ({ isOpen, onClose, onPermissionGranted }) => {
  const [isLoading, setIsLoading] = useState(false);
  const [permissionDenied, setPermissionDenied] = useState(false);
  const [status, setStatus] = useState(null);

  useEffect(() => {
    if (isOpen) {
      const currentStatus = notificationManager.getStatus();
      setStatus(currentStatus);
      console.log('üìä –°—Ç–∞—Ç—É—Å –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞:', currentStatus);
    }
  }, [isOpen]);

  const handleRequestPermission = async () => {
    console.log('üîî –ó–∞–ø—Ä–æ—Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è —á–µ—Ä–µ–∑ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ...');
    setIsLoading(true);
    setPermissionDenied(false);

    try {
      const granted = await notificationManager.requestPermission();
      console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è:', granted);

      if (granted) {
        // –°—Ä–∞–∑—É —Ç–µ—Å—Ç–∏—Ä—É–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        setTimeout(() => {
          notificationManager.showNotification('–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã! üéâ', {
            body: '–¢–µ–ø–µ—Ä—å –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –≤–∞–∂–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è',
            soundType: 'success',
            autoClose: 5000
          });
        }, 500);

        onPermissionGranted?.();
        onClose();
      } else {
        setPermissionDenied(true);
      }
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è:', error);
      setPermissionDenied(true);
    } finally {
      setIsLoading(false);
    }
  };

  const handleTestSound = () => {
    console.log('üîä –¢–µ—Å—Ç –∑–≤—É–∫–∞ –∏–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞');
    notificationManager.playSound('success');
  };

  const handleTestNotification = () => {
    console.log('üîî –¢–µ—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞');
    notificationManager.showNotification('–¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ', {
      body: '–ï—Å–ª–∏ –≤—ã –≤–∏–¥–∏—Ç–µ —ç—Ç–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –∑–Ω–∞—á–∏—Ç –≤—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ!',
      soundType: 'message',
      autoClose: 5000
    });
  };

  return (
    <Modal isOpen={isOpen} onClose={onClose} isCentered size="md">
      <ModalOverlay />
      <ModalContent>
        <ModalHeader>
          <HStack>
            <Icon as={FiBell} color="purple.500" />
            <Text>–í–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</Text>
          </HStack>
        </ModalHeader>

        <ModalBody>
          <VStack spacing={4} align="stretch">
            <Text>
              –†–∞–∑—Ä–µ—à–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å –≤–∞–∂–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö
              –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è—Ö, –æ–±—Ä–∞—â–µ–Ω–∏—è—Ö –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö –¥–∞–∂–µ –∫–æ–≥–¥–∞ –≤–∫–ª–∞–¥–∫–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞.
            </Text>

            {/* –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
            {status && (
              <Box p={3} bg={useColorModeValue('blue.50', 'blue.900')} rounded="md">
                <Text fontSize="sm" fontWeight="bold" mb={2}>–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞:</Text>
                <VStack spacing={1} align="start" fontSize="xs">
                  <HStack>
                    <Icon as={status.isSupported ? FiCheck : FiX} color={status.isSupported ? 'green.500' : 'red.500'} />
                    <Text>–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –±—Ä–∞—É–∑–µ—Ä–∞: {status.isSupported ? '–î–∞' : '–ù–µ—Ç'}</Text>
                  </HStack>
                  <HStack>
                    <Icon as={status.audioContext ? FiCheck : FiX} color={status.audioContext ? 'green.500' : 'red.500'} />
                    <Text>–ê—É–¥–∏–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç: {status.audioContext ? '–î–∞' : '–ù–µ—Ç'}</Text>
                  </HStack>
                  <HStack>
                    <Badge colorScheme={
                      status.permission === 'granted' ? 'green' :
                      status.permission === 'denied' ? 'red' : 'yellow'
                    }>
                      –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ: {status.permission}
                    </Badge>
                  </HStack>
                </VStack>
              </Box>
            )}

            <Box p={4} bg={useColorModeValue('gray.50', 'gray.700')} rounded="md">
              <VStack spacing={3}>
                <Text fontSize="sm" fontWeight="bold">–ß—Ç–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ:</Text>
                <VStack spacing={2} align="start" fontSize="sm">
                  <Text>üé´ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –æ–±—Ä–∞—â–µ–Ω–∏—è—Ö</Text>
                  <Text>üìÖ –°–æ–æ–±—â–µ–Ω–∏—è –æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è—Ö</Text>
                  <Text>üë§ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö</Text>
                  <Text>üîä –ì—Ä–æ–º–∫–∏–µ –∑–≤—É–∫–æ–≤—ã–µ —Å–∏–≥–Ω–∞–ª—ã</Text>
                </VStack>
              </VStack>
            </Box>

            {permissionDenied && (
              <Alert status="warning" rounded="md">
                <AlertIcon />
                <VStack align="start" spacing={1}>
                  <Text fontSize="sm" fontWeight="bold">
                    –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ
                  </Text>
                  <Text fontSize="xs">
                    –í–∫–ª—é—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –±—Ä–∞—É–∑–µ—Ä–∞:
                    –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∏–∫–æ–Ω–∫—É –∑–∞–º–∫–∞/—â–∏—Ç–∞ –≤ –∞–¥—Ä–µ—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ ‚Üí –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è ‚Üí –†–∞–∑—Ä–µ—à–∏—Ç—å
                  </Text>
                </VStack>
              </Alert>
            )}

            <VStack spacing={2}>
              <HStack spacing={2} w="full">
                <Button
                  size="sm"
                  variant="outline"
                  leftIcon={<Icon as={FiVolume2} boxSize={4} />}  // ‚Üê –û–±–µ—Ä–Ω—É–ª–∏ –≤ Icon
                  onClick={handleTestSound}
                  flex="1"
                >
                  –¢–µ—Å—Ç –∑–≤—É–∫–∞
                </Button>
                {status?.permission === 'granted' && (
                  <Button
                    size="sm"
                    variant="outline"
                    leftIcon={<Icon as={FiBell} boxSize={4} />}  // ‚Üê –û–±–µ—Ä–Ω—É–ª–∏ –≤ Icon
                    onClick={handleTestNotification}
                    flex="1"
                  >
                    –¢–µ—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
                  </Button>
                )}
              </HStack>

              {status?.permission === 'granted' && (
                <Text fontSize="xs" color="green.500" textAlign="center">
                  ‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —É–∂–µ —Ä–∞–∑—Ä–µ—à–µ–Ω—ã! –ú–æ–∂–µ—Ç–µ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—ã—à–µ.
                </Text>
              )}
            </VStack>
          </VStack>
        </ModalBody>

        <ModalFooter>
          <HStack>
            <Button variant="ghost" onClick={onClose}>
              {status?.permission === 'granted' ? '–ó–∞–∫—Ä—ã—Ç—å' : '–ù–µ —Å–µ–π—á–∞—Å'}
            </Button>
            {status?.permission !== 'granted' && (
              <Button
                colorScheme="purple"
                isLoading={isLoading}
                loadingText="–ó–∞–ø—Ä–æ—Å..."
                onClick={handleRequestPermission}
              >
                –†–∞–∑—Ä–µ—à–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
              </Button>
            )}
          </HStack>
        </ModalFooter>
      </ModalContent>
    </Modal>
  );
};

export default NotificationPermissionModal;