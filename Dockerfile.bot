# Многоступенчатая сборка для Telegram бота
FROM python:3.11-slim AS base

# Устанавливаем системные зависимости
RUN apt-get update && \
    rm -rf /var/lib/apt/lists/* && \
    apt-get clean

# Создаем пользователя приложения
RUN groupadd -r appuser && useradd -r -g appuser appuser

# Этап установки зависимостей
FROM base AS dependencies

# Устанавливаем инструменты сборки для psutil
RUN apt-get update && apt-get install -y \
    gcc \
    python3-dev \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

WORKDIR /app

# Копируем только requirements.txt для кеширования слоя
COPY requirements.txt .

# Устанавливаем Python зависимости
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# Финальный этап
FROM base AS production

WORKDIR /app

# Копируем установленные зависимости из предыдущего этапа
COPY --from=dependencies /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages
COPY --from=dependencies /usr/local/bin /usr/local/bin

# Создаем необходимые директории
RUN mkdir -p /app/data /app/logs /app/avatars /app/ticket_photos /app/newsletter_photos && \
    chown -R appuser:appuser /app

# Копируем исходный код приложения
COPY --chown=appuser:appuser config.py .
COPY --chown=appuser:appuser dependencies.py .
COPY --chown=appuser:appuser bot/ ./bot/
COPY --chown=appuser:appuser models/ ./models/
COPY --chown=appuser:appuser utils/ ./utils/

# Переключаемся на непривилегированного пользователя
USER appuser

# Настройка health check для бота
HEALTHCHECK --interval=60s --timeout=10s --start-period=30s --retries=3 \
    CMD test -f /app/data/bot_initialized || exit 1

# Команда запуска
CMD ["python", "-m", "bot.bot"]