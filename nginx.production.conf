log_format main_format '[$time_local] $status $request_method $uri ($request_time s) - $remote_addr';
log_format api_format '[$time_local] API: $request_method $uri -> $status ($request_time s) - $remote_addr';

# HTTP сервер для перенаправления на HTTPS и выдачи сертификатов
server {
    listen 80;
    server_name $DOMAIN_NAME;
    
    # Для получения SSL сертификатов от Let's Encrypt
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    # Перенаправление всего остального трафика на HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS сервер
server {
    listen 443 ssl;
    http2 on;
    server_name $DOMAIN_NAME;
    root /usr/share/nginx/html;
    index index.html;

    # SSL сертификаты
    ssl_certificate /etc/letsencrypt/live/$DOMAIN_NAME/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/$DOMAIN_NAME/privkey.pem;
    
    # SSL настройки безопасности
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    
    # HSTS (HTTP Strict Transport Security)
    add_header Strict-Transport-Security "max-age=63072000" always;

    # Логирование
    access_log /var/log/nginx/access.log main_format;
    error_log /var/log/nginx/error.log warn;
    
    # Настройки сжатия (оптимизированные для продакшена)
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        application/json
        application/javascript
        application/xml+rss
        application/xml
        image/svg+xml
        text/css
        text/javascript
        text/js
        text/plain
        text/xml;

    # Обработка favicon и apple-touch-icon (отключаем логирование)
    location = /favicon.ico {
        try_files /favicon.ico =204;
        access_log off;
        log_not_found off;
        expires 30d;
        add_header Cache-Control "public, immutable";
    }

    location = /apple-touch-icon.png {
        try_files /apple-touch-icon.png =204;
        access_log off;
        log_not_found off;
        expires 30d;
        add_header Cache-Control "public, immutable";
    }

    location = /apple-touch-icon-precomposed.png {
        try_files /apple-touch-icon-precomposed.png =204;
        access_log off;
        log_not_found off;
        expires 30d;
        add_header Cache-Control "public, immutable";
    }

    # Обработка статических файлов (минимальное логирование)
    location /static/ {
        alias /usr/share/nginx/html/static/;
        try_files $uri =404;
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # Отключаем логирование для частых запросов
    location = /api/notifications/check_new {
        proxy_pass http://web:8000/notifications/check_new;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Оптимизированные буферы для небольших ответов
        proxy_buffering on;
        proxy_buffer_size 8k;
        proxy_buffers 4 8k;
        proxy_busy_buffers_size 16k;
        
        access_log off;
    }

    location = /api/dashboard/stats {
        proxy_pass http://web:8000/dashboard/stats;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Оптимизированные буферы для небольших ответов
        proxy_buffering on;
        proxy_buffer_size 8k;
        proxy_buffers 4 8k;
        proxy_busy_buffers_size 16k;
        
        access_log off;
    }

    # Отключаем логирование для корневого API эндпоинта (проверка работоспособности)
    location = /api/ {
        proxy_pass http://web:8000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Небольшие буферы для проверки работоспособности
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 2 4k;
        proxy_busy_buffers_size 8k;
        
        access_log off;
    }

    # НОВАЯ СЕКЦИЯ: Специальная обработка для изображений и медиафайлов
    location ~* ^/api/(avatars|ticket_photos|newsletter_photos|media)/ {
        proxy_pass http://web:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Настройки таймаутов для больших файлов
        proxy_connect_timeout 60s;
        proxy_send_timeout 120s;
        proxy_read_timeout 120s;

        # ОПТИМИЗИРОВАННЫЕ БУФЕРЫ для изображений
        proxy_buffering on;
        proxy_buffer_size 256k;          # Равен размеру одного буфера
        proxy_buffers 8 256k;            # 8 буферов по 256k  
        proxy_busy_buffers_size 512k;    # 2 буфера (512k >= 256k)
        proxy_max_temp_file_size 1024m;  # Максимальный размер temp файла
        proxy_temp_file_write_size 256k; # Размер записи в temp файл

        # Кэширование для изображений
        expires 1h;
        add_header Cache-Control "public, must-revalidate";
        
        # Отключаем логирование для изображений
        access_log off;
    }

    # Обработка обычных API-запросов (с умеренными буферами)
    location /api/ {
        proxy_pass http://web:8000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Настройки таймаутов
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # Умеренные буферы для обычных API запросов
        proxy_buffering on;
        proxy_buffer_size 16k;           # Увеличили с 4k
        proxy_buffers 8 16k;             # Увеличили с 8 4k
        proxy_busy_buffers_size 32k;     # Увеличили
        proxy_max_temp_file_size 256m;   # Для больших POST запросов
        proxy_temp_file_write_size 64k;

        access_log /var/log/nginx/access.log api_format;
    }

    # УДАЛИЛИ ДУБЛИРОВАННУЮ секцию /avatars/ - теперь обрабатывается выше

    # Документация API
    location /docs {
        proxy_pass http://web:8000/docs;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Небольшие буферы для документации
        proxy_buffering on;
        proxy_buffer_size 8k;
        proxy_buffers 4 8k;
        proxy_busy_buffers_size 16k;
    }

    location /redoc {
        proxy_pass http://web:8000/redoc;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Небольшие буферы для документации
        proxy_buffering on;
        proxy_buffer_size 8k;
        proxy_buffers 4 8k;
        proxy_busy_buffers_size 16k;
    }

    location /openapi.json {
        proxy_pass http://web:8000/openapi.json;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Средние буферы для OpenAPI схемы
        proxy_buffering on;
        proxy_buffer_size 16k;
        proxy_buffers 4 16k;
        proxy_busy_buffers_size 32k;
    }

    # Обработка фронтенда (SPA) - отключаем логирование навигации
    location / {
        try_files $uri $uri/ /index.html;
        expires 1h;
        add_header Cache-Control "public, must-revalidate";
        access_log off;
    }

    # Настройки безопасности
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https:; media-src 'self'; object-src 'none'; child-src 'none'; worker-src 'self'; frame-ancestors 'self'; form-action 'self'; base-uri 'self';" always;

    # Обработка ошибок
    error_page 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
        access_log off;
    }

    # Увеличенный лимит размера загружаемых файлов
    client_max_body_size 50M;
}
