#!/bin/bash

# üöÄ –°–ö–†–ò–ü–¢ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ô –ù–ê–°–¢–†–û–ô–ö–ò PRODUCTION –°–ï–†–í–ï–†–ê
# –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø—Ä–æ—Å—Ç–æ–π –∏ –Ω–∞–¥–µ–∂–Ω—ã–π –¥–µ–ø–ª–æ–π

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –ª—é–±–æ–π –æ—à–∏–±–∫–µ

echo "üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Coworking Management System –Ω–∞ production —Å–µ—Ä–≤–µ—Ä–µ..."
echo ""

# –ü–æ–ª—É—á–∞–µ–º –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_DIR="$(dirname "$SCRIPT_DIR")"
cd "$PROJECT_DIR"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

print_status() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

print_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

print_step() {
    echo -e "${BLUE}üìã $1${NC}"
}

# –≠–¢–ê–ü 1: –ü—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã
print_step "–≠–¢–ê–ü 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã –∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞"

# –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –Ω–µ root
if [[ $EUID -eq 0 ]]; then
   print_error "–°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω –æ—Ç root!"
   print_info "–î–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —Å–æ–∑–¥–∞–π—Ç–µ –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:"
   echo ""
   echo "  adduser coworking"
   echo "  usermod -aG sudo coworking"
   echo "  su - coworking"
   echo ""
   print_info "–ó–∞—Ç–µ–º –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ: ./scripts/setup-production.sh"
   exit 1
fi

print_status "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ root - –û–ö"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ sudo
if ! sudo -n true 2>/dev/null; then
    print_error "–ù–µ—Ç sudo –ø—Ä–∞–≤!"
    print_info "–í—ã–ø–æ–ª–Ω–∏—Ç–µ: sudo usermod -aG sudo $(whoami)"
    print_info "–ó–∞—Ç–µ–º –ø–µ—Ä–µ–ª–æ–≥–∏–Ω—å—Ç–µ—Å—å: exit && ssh user@server"
    exit 1
fi

print_status "Sudo –ø—Ä–∞–≤–∞ –µ—Å—Ç—å - –û–ö"

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –û–°
if [[ -f /etc/os-release ]]; then
    . /etc/os-release
    OS=$ID
    print_status "–û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞: $PRETTY_NAME"
else
    print_error "–ù–µ —É–¥–∞–µ—Ç—Å—è –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É"
    exit 1
fi

# –≠–¢–ê–ü 2: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker
print_step "–≠–¢–ê–ü 2: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ Docker"

if command -v docker &> /dev/null; then
    print_status "Docker —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    docker --version
else
    print_info "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker..."
    curl -fsSL https://get.docker.com -o get-docker.sh
    sudo sh get-docker.sh
    rm get-docker.sh
    print_status "Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker Compose
print_info "–ü—Ä–æ–≤–µ—Ä—è–µ–º Docker Compose..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
if docker compose version > /dev/null 2>&1; then
    print_status "Docker Compose v2 (–≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π) –¥–æ—Å—Ç—É–ø–µ–Ω"
    docker compose version
elif command -v docker-compose &> /dev/null; then
    print_status "Docker Compose v1 –Ω–∞–π–¥–µ–Ω"
    docker-compose --version
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é
    COMPOSE_VERSION=$(docker-compose --version 2>/dev/null | grep -o '[0-9]\+\.[0-9]\+' | head -1)
    MAJOR_VERSION=$(echo "$COMPOSE_VERSION" | cut -d. -f1)
    
    if [[ "$MAJOR_VERSION" -lt "2" ]] 2>/dev/null; then
        print_info "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é Docker Compose..."
        sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        sudo ln -sf /usr/local/bin/docker-compose /usr/bin/docker-compose
        print_status "Docker Compose –æ–±–Ω–æ–≤–ª–µ–Ω –¥–æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏"
        docker-compose --version
    else
        print_status "–í–µ—Ä—Å–∏—è Docker Compose –ø–æ–¥—Ö–æ–¥—è—â–∞—è: $COMPOSE_VERSION"
    fi
else
    print_info "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker Compose..."
    sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    sudo chmod +x /usr/local/bin/docker-compose
    sudo ln -sf /usr/local/bin/docker-compose /usr/bin/docker-compose
    print_status "Docker Compose —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    docker-compose --version
fi

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø—É docker
if groups "$USER" | grep &>/dev/null '\bdocker\b'; then
    print_status "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤ –≥—Ä—É–ø–ø–µ docker"
    NEED_RELOGIN=false
else
    print_info "–î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø—É docker..."
    sudo usermod -aG docker "$USER"
    print_warning "–ü–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–µ—Ä–µ–ª–æ–≥–∏–Ω–∏—Ç—å—Å—è –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞!"
    NEED_RELOGIN=true
fi

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Docker daemon
print_info "–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Docker daemon..."
sudo mkdir -p /etc/docker
sudo tee /etc/docker/daemon.json > /dev/null <<EOF
{
  "dns": ["8.8.8.8", "8.8.4.4", "1.1.1.1"],
  "log-driver": "json-file", 
  "log-opts": {
    "max-size": "10m",
    "max-file": "3"
  },
  "storage-driver": "overlay2"
}
EOF

sudo systemctl restart docker
sudo systemctl enable docker
print_status "Docker –Ω–∞—Å—Ç—Ä–æ–µ–Ω"

# –≠–¢–ê–ü 3: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã
print_step "–≠–¢–ê–ü 3: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã"

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞–∫–µ—Ç–æ–≤
print_info "–û–±–Ω–æ–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º—É..."
sudo apt update && sudo apt upgrade -y

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
print_info "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã..."
sudo apt install -y curl wget git nano htop unzip fail2ban ufw

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ firewall
print_info "–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º firewall..."
sudo ufw --force enable
sudo ufw allow ssh
sudo ufw allow 80/tcp
sudo ufw allow 443/tcp
print_status "Firewall –Ω–∞—Å—Ç—Ä–æ–µ–Ω (–ø–æ—Ä—Ç—ã 22, 80, 443)"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ fail2ban
sudo systemctl enable fail2ban
sudo systemctl start fail2ban
print_status "Fail2ban –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω"

# –≠–¢–ê–ü 4: –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
print_step "–≠–¢–ê–ü 4: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞"

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
print_info "–°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –¥–∞–Ω–Ω—ã—Ö..."
mkdir -p data logs avatars ticket_photos newsletter_photos config
print_status "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ .env —Ñ–∞–π–ª–∞
if [[ ! -f .env ]]; then
    if [[ -f .env.example ]]; then
        print_info "–°–æ–∑–¥–∞–µ–º .env –∏–∑ .env.example..."
        cp .env.example .env
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
        sed -i 's/BUILD_TARGET=development/BUILD_TARGET=production/' .env
        sed -i 's/ENVIRONMENT=development/ENVIRONMENT=production/' .env
        sed -i 's/DEBUG=true/DEBUG=false/' .env
        
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–µ–∫—Ä–µ—Ç–Ω—ã—Ö –∫–ª—é—á–µ–π
        print_info "–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –∫–ª—é—á–∏..."
        SECRET_KEY=$(python3 -c "import os; print(os.urandom(32).hex())")
        JWT_KEY=$(python3 -c "import os; print(os.urandom(32).hex())")
        
        sed -i "s/your-secret-key-change-me/$SECRET_KEY/" .env
        sed -i "s/your-jwt-secret-key-change-me/$JWT_KEY/" .env
        
        print_status ".env —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω —Å –±–µ–∑–æ–ø–∞—Å–Ω—ã–º–∏ –∫–ª—é—á–∞–º–∏"
    else
        print_error ".env.example –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        exit 1
    fi
else
    print_status ".env —Ñ–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi

# –°–æ–∑–¥–∞–Ω–∏–µ —É–ø—Ä–∞–≤–ª—è—é—â–∏—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤
print_info "–°–æ–∑–¥–∞–µ–º —É–ø—Ä–∞–≤–ª—è—é—â–∏–µ —Å–∫—Ä–∏–ø—Ç—ã..."

# –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
cat > start.sh << 'EOF'
#!/bin/bash
echo "üöÄ –ó–∞–ø—É—Å–∫ Coworking System –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω —Ä–µ–∂–∏–º–µ..."
./scripts/start-prod.sh
EOF
chmod +x start.sh

# –°–∫—Ä–∏–ø—Ç –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
cat > stop.sh << 'EOF'
#!/bin/bash
echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Coworking System..."
docker-compose down
echo "‚úÖ –°–∏—Å—Ç–µ–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"
EOF
chmod +x stop.sh

# –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞
cat > status.sh << 'EOF'
#!/bin/bash
echo "üìä –°—Ç–∞—Ç—É—Å Coworking System:"
./scripts/status.sh
EOF
chmod +x status.sh

# –°–∫—Ä–∏–ø—Ç –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤
cat > logs.sh << 'EOF'
#!/bin/bash
if [ -n "$1" ]; then
    echo "üìã –õ–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–∞ $1:"
    docker-compose logs -f "$1"
else
    echo "üìã –õ–æ–≥–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤:"
    docker-compose logs -f
fi
EOF
chmod +x logs.sh

# –°–∫—Ä–∏–ø—Ç —Ä–µ—Å—Ç–∞—Ä—Ç–∞
cat > restart.sh << 'EOF'
#!/bin/bash
echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Coworking System..."
docker-compose down
./scripts/start-prod.sh
EOF
chmod +x restart.sh

print_status "–£–ø—Ä–∞–≤–ª—è—é—â–∏–µ —Å–∫—Ä–∏–ø—Ç—ã —Å–æ–∑–¥–∞–Ω—ã"

# –≠–¢–ê–ü 5: –§–∏–Ω–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞
print_step "–≠–¢–ê–ü 5: –§–∏–Ω–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞"

# –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
print_info "–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞..."
chmod +x scripts/*.sh
print_status "–ü—Ä–∞–≤–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker Compose
print_info "–ü—Ä–æ–≤–µ—Ä—è–µ–º docker-compose.yml..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –≤—ã–∑–æ–≤–∞ docker compose
if docker compose version > /dev/null 2>&1; then
    # –ù–æ–≤—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å (Docker Compose v2)
    COMPOSE_CMD="docker compose"
elif docker-compose --version > /dev/null 2>&1; then
    # –°—Ç–∞—Ä—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å (Docker Compose v1)  
    COMPOSE_CMD="docker-compose"
else
    print_error "Docker Compose –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
fi

print_info "–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–æ–º–∞–Ω–¥–∞: $COMPOSE_CMD"

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
export BUILD_TARGET=production
export ENVIRONMENT=production
export DEBUG=false
export HOST=0.0.0.0
export PORT=8000
export API_BASE_URL_EXTERNAL=https://example.com/api
export API_BASE_URL_INTERNAL=http://web:8000
export FRONTEND_URL=https://example.com
export DOMAIN_NAME=example.com
export BOT_TOKEN=test_token
export ADMIN_TELEGRAM_ID=123456789
export BOT_LINK=https://t.me/test_bot
export INVITE_LINK=https://t.me/test_bot
export GROUP_ID=123456789
export FOR_LOGS=123456789
export SECRET_KEY=test_secret_key_for_config_check
export SECRET_KEY_JWT=test_jwt_secret_key_for_config_check
export ADMIN_LOGIN=admin
export ADMIN_PASSWORD=admin
export CORS_ORIGINS=http://localhost
export ACCESS_TOKEN_EXPIRE_HOURS=24
export YOKASSA_ACCOUNT_ID=test_account
export YOKASSA_SECRET_KEY=test_secret
export RUBITIME_API_KEY=test_api_key
export RUBITIME_BASE_URL=https://rubitime.ru/api2/
export RUBITIME_BRANCH_ID=12595
export RUBITIME_COOPERATOR_ID=25786
export REDIS_URL=redis://redis:6379/0
export APP_NAME="Coworking API"
export APP_VERSION="1.0.0"

print_info "–ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é docker-compose —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏..."
if $COMPOSE_CMD config > /dev/null 2>&1; then
    print_status "Docker Compose –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞"
else
    print_warning "–ü—Ä–æ–≤–µ—Ä–∫–∞ docker-compose.yml –ø–æ–∫–∞–∑–∞–ª–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è"
    print_info "–≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è –ø–µ—Ä–≤–∏—á–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ - –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ"
    print_info "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ .env —Ñ–∞–π–ª–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
fi

# –û–±–Ω–æ–≤–ª—è–µ–º —Å–∫—Ä–∏–ø—Ç—ã –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã
print_info "–û–±–Ω–æ–≤–ª—è–µ–º —É–ø—Ä–∞–≤–ª—è—é—â–∏–µ —Å–∫—Ä–∏–ø—Ç—ã..."

# –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
cat > stop.sh << EOF
#!/bin/bash
echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Coworking System..."
$COMPOSE_CMD down
echo "‚úÖ –°–∏—Å—Ç–µ–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"
EOF
chmod +x stop.sh

# –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤
cat > logs.sh << EOF
#!/bin/bash
if [ -n "\$1" ]; then
    echo "üìã –õ–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–∞ \$1:"
    $COMPOSE_CMD logs -f "\$1"
else
    echo "üìã –õ–æ–≥–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤:"
    $COMPOSE_CMD logs -f
fi
EOF
chmod +x logs.sh

# –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç —Ä–µ—Å—Ç–∞—Ä—Ç–∞
cat > restart.sh << EOF
#!/bin/bash
echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Coworking System..."
$COMPOSE_CMD down
./scripts/start-prod.sh
EOF
chmod +x restart.sh

# –í—ã–≤–æ–¥ –∏—Ç–æ–≥–æ–≤
echo ""
echo "üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ production —Å–µ—Ä–≤–µ—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo ""
print_step "–°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:"
echo ""

if [[ $NEED_RELOGIN == true ]]; then
    print_warning "1. –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –ø–µ—Ä–µ–ª–æ–≥–∏–Ω—å—Ç–µ—Å—å –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∞–≤ docker:"
    echo "   exit"
    echo "   ssh $(whoami)@$(hostname -I | awk '{print $1}')"
    echo ""
fi

print_info "2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ .env —Ñ–∞–π–ª:"
echo "   nano .env"
echo ""
echo "   –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ:"
echo "   - BOT_TOKEN=–≤–∞—à_—Ç–æ–∫–µ–Ω_–±–æ—Ç–∞"
echo "   - ADMIN_TELEGRAM_ID=–≤–∞—à_telegram_id"  
echo "   - ADMIN_PASSWORD=–±–µ–∑–æ–ø–∞—Å–Ω—ã–π_–ø–∞—Ä–æ–ª—å"
echo "   - DOMAIN_NAME=–≤–∞—à_–¥–æ–º–µ–Ω.com (–µ—Å–ª–∏ –µ—Å—Ç—å)"
echo ""

print_info "3. (–û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) –ù–∞—Å—Ç—Ä–æ–π—Ç–µ SSL:"
echo "   ./scripts/setup-ssl.sh"
echo ""

print_info "4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∏—Å—Ç–µ–º—É:"
echo "   ./start.sh"
echo ""

print_status "–ì–æ—Ç–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:"
echo "   ./start.sh     - –ó–∞–ø—É—Å–∫"
echo "   ./stop.sh      - –û—Å—Ç–∞–Ω–æ–≤–∫–∞"
echo "   ./restart.sh   - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫"
echo "   ./status.sh    - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞"
echo "   ./logs.sh      - –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤"
echo ""

if [[ $NEED_RELOGIN == true ]]; then
    print_warning "‚ö†Ô∏è  –ù–ï –ó–ê–ë–£–î–¨–¢–ï –ü–ï–†–ï–õ–û–ì–ò–ù–ò–¢–¨–°–Ø!"
fi