#!/bin/bash

# =============================================================================
# –û–ß–ò–°–¢–ö–ê —Å–∏—Å—Ç–µ–º—ã –æ—Ç —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
# =============================================================================

set -e

# –ü–æ–ª—É—á–∞–µ–º –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É (–Ω–∞ —É—Ä–æ–≤–µ–Ω—å –≤—ã—à–µ –æ—Ç scripts)
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_DIR="$(dirname "$SCRIPT_DIR")"

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
cd "$PROJECT_DIR"

echo "üßπ –û—á–∏—Å—Ç–∫–∞ Coworking Management System"
echo "====================================="

# –§—É–Ω–∫—Ü–∏—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
confirm() {
    read -p "$1 (y/N): " -n 1 -r
    echo
    [[ $REPLY =~ ^[Yy]$ ]]
}

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
if confirm "üõë –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã?"; then
    echo "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    docker-compose --profile production down 2>/dev/null || true
    docker-compose down 2>/dev/null || true
fi

# –£–¥–∞–ª–µ–Ω–∏–µ volumes
if confirm "üíæ –£–¥–∞–ª–∏—Ç—å –≤—Å–µ volumes (–í–ù–ò–ú–ê–ù–ò–ï: —ç—Ç–æ —É–¥–∞–ª–∏—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ!)?"; then
    echo "–£–¥–∞–ª–µ–Ω–∏–µ volumes..."
    docker-compose --profile production down -v 2>/dev/null || true
    docker-compose down -v 2>/dev/null || true
fi

# –û—á–∏—Å—Ç–∫–∞ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö Docker –æ–±—Ä–∞–∑–æ–≤
if confirm "üê≥ –£–¥–∞–ª–∏—Ç—å –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ Docker –æ–±—Ä–∞–∑—ã?"; then
    echo "–û—á–∏—Å—Ç–∫–∞ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –æ–±—Ä–∞–∑–æ–≤..."
    docker image prune -f
fi

# –û—á–∏—Å—Ç–∫–∞ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
if confirm "üì¶ –£–¥–∞–ª–∏—Ç—å –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã?"; then
    echo "–û—á–∏—Å—Ç–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    docker container prune -f
fi

# –û—á–∏—Å—Ç–∫–∞ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö —Å–µ—Ç–µ–π
if confirm "üåê –£–¥–∞–ª–∏—Ç—å –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Å–µ—Ç–∏?"; then
    echo "–û—á–∏—Å—Ç–∫–∞ —Å–µ—Ç–µ–π..."
    docker network prune -f
fi

# –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ —Å–∏—Å—Ç–µ–º—ã Docker
if confirm "‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –í—ã–ø–æ–ª–Ω–∏—Ç—å –ø–æ–ª–Ω—É—é –æ—á–∏—Å—Ç–∫—É Docker —Å–∏—Å—Ç–µ–º—ã?"; then
    echo "–ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ Docker —Å–∏—Å—Ç–µ–º—ã..."
    docker system prune -af
fi

# –û—á–∏—Å—Ç–∫–∞ –ª–æ–≥–æ–≤
if confirm "üìù –û—á–∏—Å—Ç–∏—Ç—å —Ñ–∞–π–ª—ã –ª–æ–≥–æ–≤?"; then
    echo "–û—á–∏—Å—Ç–∫–∞ –ª–æ–≥–æ–≤..."
    rm -rf logs/* 2>/dev/null || true
    echo "–õ–æ–≥–∏ –æ—á–∏—â–µ–Ω—ã"
fi

# –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
if confirm "üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è?"; then
    echo "–û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
    rm -rf data/temp/* 2>/dev/null || true
    rm -rf data/cache/* 2>/dev/null || true
    echo "–í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –æ—á–∏—â–µ–Ω—ã"
fi

echo ""
echo "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo ""
echo "üìã –î–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:"
echo "  ./scripts/start-local.sh   # –õ–æ–∫–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º"
echo "  ./scripts/start-prod.sh    # –ü—Ä–æ–¥–∞–∫—à–Ω —Ä–µ–∂–∏–º"